
variable "cpus" {
  type    = string
  default = "1"
}

variable "disk_size" {
  type    = string
  default = "2048"
}

variable "memory" {
  type    = string
  default = "1024"
}

source "qemu" "autogenerated_1" {
  accelerator       = "kvm"
  boot_command      = [
    "root<enter><wait>", 
    "ifconfig eth0 up && udhcpc -i eth0<enter><wait5>", 
    "wget http://{{ .HTTPIP }}:{{ .HTTPPort }}/answers<enter><wait>", 
    "setup-alpine -f $PWD/answers<enter><wait5>", 
    "alpineqemu<enter><wait>", 
    "alpineqemu<enter><wait>", 
    "<wait10><wait10>", 
    "y<enter>", 
    "<wait10><wait10><wait10>", 
    "<wait10><wait10><wait10>", 
    "rc-service sshd stop<enter>", 
    "mount /dev/sda2 /mnt<enter>", 
    "echo 'PermitRootLogin yes' >> /mnt/etc/ssh/sshd_config<enter>", 
    "umount /mnt<enter>", 
    "reboot<enter>"
  ]
  boot_wait         = "30s"
  communicator      = "ssh"
  cpus              = "${var.cpus}"
  disk_interface    = "virtio-scsi"
  disk_size         = "${var.disk_size}"
  format            = "qcow2"
  headless          = false
  http_directory    = "http"
  iso_checksum      = "8e14a8f23d1d0a3772d486a94a7d707df65a942e605617ed6431fcb1ede387e4"
  iso_checksum_type = "sha256"
  iso_urls          = ["isos/alpine-virt-3.11.5-x86_64.iso", "http://dl-cdn.alpinelinux.org/alpine/v3.11/releases/x86_64/alpine-virt-3.11.5-x86_64.iso"]
  memory            = "${var.memory}"
  qemu_binary       = "qemu-system-x86_64"
  qemuargs          = [
    ["-device", "virtio-rng-pci"], 
    ["-device", "virtio-scsi-pci,id=scsi0"], 
    ["-device", "scsi-hd,bus=scsi0.0,drive=drive0"], 
    ["-device", "virtio-net,netdev=user.0"]
  ]
  shutdown_command  = "poweroff"
  ssh_password      = "alpineqemu"
  ssh_username      = "root"
  ssh_wait_timeout  = "10m"
}

build {
  description = "Build base Alpine Linux x86_64"

  sources = ["source.qemu.autogenerated_1"]

  provisioner "shell" {
    scripts = [
      "scripts/00base.sh", 
      "scripts/01alpine.sh", 
      "scripts/01networking.sh", 
      "scripts/02sshd.sh", 
      "scripts/04sudoers.sh", 
      "scripts/70random.sh", 
      "scripts/80cloudinit.sh", 
      "scripts/90showip.sh", 
      "scripts/99minimize.sh"
    ]
  }

  post-processor "shell-local" {
    inline = ["mv -fv output-qemu/packer-qemu output/alpine-311-cloudimg-amd64.qcow2 && rmdir -v output-qemu"]
  }
}
